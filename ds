#!/usr/bin/env python

import argparse
import csv
import re
import os

bookmark_path = os.path.join(os.environ['HOME'],".dir-short.bookmarks")
delimiter = ':'

def find():
    pass

def save():
    pass

def parse_args():
    parser = argparse.ArgumentParser(
            description='Small utility for quickly navigating between directories')
    group = parser.add_mutually_exclusive_group()
    group.add_argument('-s','--save', nargs='?', metavar='nickname',
            help='bookmark current directory with optional nickname')
    group.add_argument('filter', nargs='?',
            help='string that saved directories will be matched against')
    parser.parse_args()

def load_shortcuts():
    bookmarks = []

    try:
        with open(bookmark_path,'r') as bookmark_file:
            bookmark_reader = csv.reader(bookmark_file, delimiter=delimiter)
            for bookmark in bookmark_reader:
                bookmarks.append((bookmark[0],bookmark[1]))
    except FileNotFoundError:
        pass

    return sorted(bookmarks)

def save_shortcuts(bookmarks):
    with open(bookmark_path,'w',newline='') as bookmark_file:
        bookmark_writer = csv.writer(bookmark_file, delimiter=delimiter, quoting=csv.QUOTE_MINIMAL)
        for bookmark in bookmarks:
            bookmark_writer.writerows(bookmarks)

def bookmark_directory(bookmarks, directory, nickname=''):
    """Adds 'directory' to bookmark list with optional 'nickname'"""
    bookmark = (directory,nickname)
    bookmarks.append(bookmark)
    save_shortcuts(bookmarks)

def match_to_regex(match):
    """Convert matcher string into a regex"""
    return re.compile(r'^.*rust.*$')

def filter_shortcuts(shortcuts, match):
    """Filter shortcuts that match the supplied string. Every space
        in the string matches any group of one or more characters i.e.
        'tmp py' matches '/home/user/tmp/python/projects'"""
    regex = match_to_regex(match)
    filtered_shortcuts = [x for x in shortcuts if regex.match(x[1])]
    return filtered_shortcuts

def print_shortcuts(shortcuts):
    for x in shortcuts:
        print('{}\t{}'.format(x[0],x[1]))

if __name__ == '__main__':
    parse_args()

    bmarks = load_shortcuts()

    print_shortcuts(filter_shortcuts(bmarks,'rust'))
